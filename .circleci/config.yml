version: 2

jobs:
  downloadinstall4j:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - install4j-{{ checksum "scripts/extract-install4j.sh" }}
      - run: scripts/download-install4j-and-jres.sh
      - save_cache:
          key: install4j-{{ checksum "scripts/extract-install4j.sh" }}
          paths:
            - "~/downloads"
            - "~/.install4j7"
    filters:
      tags:
        only: /.*/

  buildDev:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - restore_cache:
          key: dependency-cache
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          key: install4j-{{ checksum "scripts/extract-install4j.sh" }}
      - run: scripts/extract-install4j.sh
      - run: install4j7/bin/install4jc --verbose --license=$INSTALL4J_KEY
      - run: ./gradlew -Pdev=true -Pinstall4jDir="install4j7" releaseJar --stacktrace
      - save_cache:
          key: dependency-cache
          paths:
            - "~/.gradle"
      - store_artifacts:
          path: build/releases
          destination: build
      - run: scripts/upload-to-builds.jabref.org.sh

  buildRelease:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - restore_cache:
          key: dependency-cache
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          key: install4j-{{ checksum "scripts/extract-install4j.sh" }}
      - run: scripts/extract-install4j.sh
      - run: install4j7/bin/install4jc --verbose --license=$INSTALL4J_KEY
      - run: ./gradlew -Pinstall4jDir="install4j7" release --stacktrace
      - store_artifacts:
          path: build/releases
          destination: release
      - run: scripts/upload-to-builds.jabref.org.sh
    filters:
      tags:
        only: /.*/

  tests:
      steps:
        - run:
            name: Save test results
            command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
            when: always
        - store_test_results:
            path: ~/test-results
        - store_artifacts:
            path: ~/test-results/junit

workflows:
  version: 2
  build:
    jobs:
      - downloadinstall4j
      - buildDev:
          requires:
            - downloadinstall4j
      - tests
      - buildRelease:
          requires:
            - downloadinstall4j
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

